"""Typings for queries generated by aiosql"""

from typing import Dict, Optional, Sequence

from asyncpg import Connection, Record


class UsersQueriesMixin:
    async def get_user_by_username(
        self, conn: Connection, *, username: str, salt: str, hashed_password: str
    ) -> Record: ...
    async def create_new_user(
        self,
        conn: Connection,
        *,
        username: str,
        name: str,
        salt: str,
        hashed_password: str
    ) -> Record: ...
    async def update_user_by_username(
        self,
        conn: Connection,
        *,
        username: str,
        new_username: str,
        new_name: str,
        new_salt: str,
        new_password: str
    ) -> Record: ...

class EntriesQueriesMixin:
    async def get_entries_for_operation_by_sess_id(
        self, conn: Connection, *, sess_id: str
    ) -> Record: ...
    async def get_entry_by_id(
        self, conn: Connection, *, entry_id: int
    ) -> Record: ...
    async def create_new_entry(
        self, conn: Connection, *, info: str, sess_id: str, author_username: str
    ) -> Record: ...
    async def delete_entry_by_id(
        self, conn: Connection, *, entry_id: int, author_username: str
    ) -> None: ...

class OperationsQueriesMixin:
    async def get_operation_by_session(self, conn: Connection, *, sess_id: str) -> Record: ...
    async def create_new_operation(
        self,
        conn: Connection,
        *,
        sess_id: str,
        author_username: str
    ) -> Record: ...
    async def delete_operation(
        self, conn: Connection, *, sess_id: str, author_username: str
    ) -> None: ...


class Queries(
    UsersQueriesMixin,
    EntriesQueriesMixin,
    OperationsQueriesMixin,
): ...

queries: Queries
